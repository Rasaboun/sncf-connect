import { journey, places } from '@/components/types/type'
import { ItineraireItemMobile } from '@/components/ui/itineraireitem'
import { getData } from '../utils/functions/utils'

export function ItineraireList({
	selectjourney,
	place,
	placesecond,
	setJourneys,
	journeys,
	setselectJourrney
}: {
	selectjourney: journey
	place: places
	placesecond: places
	setJourneys: React.Dispatch<React.SetStateAction<journey[]>>
	journeys: journey[]
	setselectJourrney: React.Dispatch<React.SetStateAction<journey>>
}) {
	return (
		<div className="mx-4 flex w-screen flex-col  space-y-4 lg:ml-28 lg:w-2/4">
			<div className="mt-4 flex flex-row items-center space-x-0 md:space-x-4">
				<button
					onClick={() => getData(place.id, placesecond.id).then((datas) => setJourneys(datas))}
					className="hidden flex-row items-center space-x-1.5 rounded-xl bg-white fill-[#127996] px-6 py-2   text-[#127996] hover:bg-[#E5E5EE] lg:inline-flex"
				>
					<p>Actualiser</p>
					<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" className="h-6 w-6">
						<path d="M21.8057 12.1347C21.806 14.1924 21.1588 16.198 19.9559 17.8675C18.7529 19.537 17.0552 20.7857 15.1032 21.4367C13.1512 22.0878 11.0439 22.1082 9.07961 21.495C7.11536 20.8819 5.39382 19.6663 4.1588 18.0204L3.64393 21.5718C3.62674 21.6906 3.56734 21.7993 3.47661 21.8779C3.38588 21.9565 3.26987 21.9999 3.14981 22C3.12561 22.0001 3.10144 21.9983 3.07754 21.9946C3.01255 21.9853 2.95004 21.9632 2.89359 21.9297C2.83715 21.8961 2.78788 21.8518 2.7486 21.7992C2.70932 21.7465 2.68081 21.6867 2.6647 21.6231C2.64858 21.5594 2.64519 21.4932 2.65471 21.4282L3.35976 16.5661C3.36134 16.5549 3.3683 16.5462 3.37062 16.5353C3.37849 16.5026 3.38969 16.4709 3.40407 16.4405C3.41611 16.4097 3.43118 16.3802 3.44907 16.3524C3.49129 16.3001 3.54044 16.2538 3.59518 16.2148C3.60165 16.2108 3.60531 16.2042 3.61218 16.2004C3.62418 16.1938 3.63732 16.1941 3.64953 16.1887C3.68928 16.1701 3.73131 16.1568 3.77453 16.1492C3.80317 16.1455 3.8321 16.1443 3.86096 16.1459C3.88259 16.1434 3.90438 16.1426 3.92614 16.1433L8.78823 16.8484C8.85318 16.8578 8.91564 16.8799 8.97204 16.9135C9.02844 16.947 9.07768 16.9914 9.11694 17.044C9.15621 17.0966 9.18473 17.1564 9.20088 17.22C9.21702 17.2836 9.22049 17.3498 9.21106 17.4147C9.20163 17.4797 9.17951 17.5421 9.14595 17.5985C9.11238 17.6549 9.06804 17.7042 9.01545 17.7434C8.96285 17.7827 8.90304 17.8112 8.83943 17.8274C8.77581 17.8435 8.70964 17.847 8.64469 17.8376L4.86946 17.2902C5.9587 18.7995 7.49845 19.9245 9.26736 20.5037C11.0363 21.0828 12.9433 21.0861 14.7142 20.5132C16.4851 19.9403 18.0288 18.8207 19.1234 17.3152C20.2179 15.8097 20.8069 13.996 20.8058 12.1347C20.8058 12.0021 20.8585 11.8749 20.9522 11.7811C21.046 11.6874 21.1732 11.6347 21.3058 11.6347C21.4384 11.6347 21.5656 11.6874 21.6593 11.7811C21.7531 11.8749 21.8058 12.0021 21.8058 12.1347H21.8057ZM3.19424 12.1347C3.19375 10.3025 3.76491 8.51585 4.82812 7.02372C5.89132 5.5316 7.39359 4.40838 9.1255 3.81062C10.8574 3.21287 12.7327 3.17038 14.4899 3.68906C16.2471 4.20775 17.7987 5.26176 18.9284 6.70419L15.201 6.16375C15.1359 6.15329 15.0694 6.15601 15.0054 6.17174C14.9414 6.18747 14.8812 6.21589 14.8283 6.25533C14.7755 6.29476 14.7312 6.3444 14.6979 6.4013C14.6646 6.45821 14.6431 6.52121 14.6346 6.58658C14.6251 6.65155 14.6285 6.71775 14.6446 6.7814C14.6607 6.84506 14.6892 6.9049 14.7285 6.95752C14.7678 7.01013 14.8171 7.05447 14.8735 7.08801C14.93 7.12155 14.9925 7.14362 15.0575 7.15296L19.9196 7.85801C19.9433 7.86174 19.9673 7.86354 19.9913 7.86338C19.9998 7.86338 20.0063 7.856 20.0148 7.85557C20.0966 7.85424 20.1768 7.83259 20.2482 7.79257C20.2584 7.78646 20.2638 7.77621 20.2735 7.7695C20.2787 7.76596 20.2856 7.7675 20.2906 7.76376C20.3087 7.74654 20.3254 7.72798 20.3406 7.70822C20.3645 7.68637 20.3861 7.66226 20.4053 7.63622C20.4352 7.57952 20.4594 7.52001 20.4776 7.45855C20.4793 7.45032 20.4847 7.44355 20.4859 7.43518L21.191 2.5726C21.2004 2.50765 21.197 2.44148 21.1808 2.37786C21.1647 2.31424 21.1362 2.25443 21.0969 2.20184C21.0576 2.14925 21.0084 2.1049 20.952 2.07134C20.8956 2.03777 20.8331 2.01564 20.7682 2.00622C20.7032 1.99679 20.637 2.00025 20.5734 2.0164C20.5098 2.03255 20.45 2.06107 20.3974 2.10033C20.3448 2.1396 20.3005 2.18884 20.2669 2.24524C20.2333 2.30164 20.2112 2.3641 20.2018 2.42905L19.6784 6.03898C18.4134 4.44486 16.6838 3.28387 14.7293 2.71702C12.7748 2.15017 10.6924 2.20556 8.7708 2.87551C6.84922 3.54545 5.18372 4.79675 4.00531 6.45586C2.82689 8.11497 2.19395 10.0997 2.19428 12.1347C2.19428 12.2673 2.24695 12.3945 2.34072 12.4882C2.43449 12.582 2.56167 12.6347 2.69428 12.6347C2.82688 12.6347 2.95406 12.582 3.04783 12.4882C3.1416 12.3945 3.19428 12.2673 3.19428 12.1347H3.19424Z"></path>
					</svg>
				</button>
				<p className="text-xs font-light text-[#5e6878]">
					Les itinéraires affichés évitent les lignes et stations fermées en île-de-France.
				</p>
				<p className="cursor-pointer whitespace-nowrap text-xs font-normal text-[#127996] md:text-sm md:font-light	">
					Voir l&lsquo;info trafic
				</p>
			</div>
			<p className="font-light  text-[#646C7A]">Meilleur itinéraire</p>
			<ItineraireItemMobile
				journey={journeys[0]}
				setselectJourrney={setselectJourrney}
				selectjourney={selectjourney}
			/>

			{journeys.length > 1 && <p className="font-light text-[#646C7A]">Autres itinéraires</p>}
			{journeys.map(
				(elem, id) =>
					id !== 0 && (
						<ItineraireItemMobile
							key={id + elem?.type}
							journey={elem}
							setselectJourrney={setselectJourrney}
							selectjourney={selectjourney}
						/>
					)
			)}
			<div className="flex w-full flex-row items-center  justify-center space-x-2 rounded-xl bg-white p-2 py-3 text-[#127996] hover:bg-[#E5E5EE]   ">
				<p>Voir + de trajets</p>
				<svg
					viewBox="0 0 24 24"
					xmlns="http://www.w3.org/2000/svg"
					aria-hidden="true"
					className="h-4 w-4 fill-[#127996]"
				>
					<path d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21508 0.913451 7.4078C0.00519941 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6934 24 14.3734 24 12C24 10.4241 23.6896 8.8637 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40041 18.0481 1.5165 16.5922 0.913445C15.1363 0.310389 13.5759 0 12 0ZM16.9614 11.4396L12.5183 16.0462C12.4512 16.1159 12.3707 16.1713 12.2817 16.2092C12.1927 16.247 12.097 16.2665 12.0003 16.2665C11.9036 16.2665 11.8079 16.247 11.7189 16.2092C11.6299 16.1713 11.5494 16.1159 11.4823 16.0462L7.03858 11.4396C6.90602 11.3022 6.83347 11.1178 6.83688 10.9269C6.84028 10.7361 6.91937 10.5544 7.05675 10.4218C7.19412 10.2893 7.37853 10.2167 7.5694 10.2201C7.76026 10.2235 7.94196 10.3026 8.07452 10.44L12.0003 14.5093L15.9255 10.44C16.058 10.3026 16.2397 10.2235 16.4306 10.2201C16.6215 10.2167 16.8059 10.2893 16.9433 10.4218C17.0806 10.5544 17.1597 10.7361 17.1631 10.9269C17.1665 11.1178 17.094 11.3022 16.9614 11.4396Z"></path>
				</svg>
			</div>
		</div>
	)
}
